# coding: utf8
'''
Римские цифры пришли к нам из древней римской системы счета. Они основаны на особых буквах алфавита, которые в различных
сочетаниях, путем суммирования (а иногда и разницы) описывают различные числа. Первые 10 римских чисел это:

I, II, III, IV, V, VI, VII, VIII, IX, and X.

Римская система счета имеет десятичное основание, но она непозиционная и не включает в себя 0 (ноль). Римские числа
образуются путем комбинации следующих семи символов:

Символ	Значение
I	1 (unus)
V	5 (quinque)
X	10 (decem)
L	50 (quinquaginta)
C	100 (centum)
D	500 (quingenti)
M	1,000 (mille)
Узнать больше о римских цифрах вы можете в статье на Википедии .

В этой задаче, вам необходимо преобразовать данное целое число (от 1 до 3999) в римскую систему счета.

Вх. данные: Число, как целочисленное (int).

Вых. данные: Римское число, как строка (str).

Примеры:

checkio(6) == 'VI'
  checkio(76) == 'LXXVI'
  checkio(13) == 'XIII'
  checkio(44) == 'XLIV'
  checkio(3999) == 'MMMCMXCIX'

Как это используется: Это задача несет образовательную цель познакомить вас с различными системами счета. Также римские
цифры часто используются в типографии и это будет полезно для создания документов. Год строительства зданий часто пишут
на фасаде и угловом камне, римскими числами. Эта система счета имеет и другие применения в современном мире и вы можете
почитать об этом здесь... А может быть вам придется писать программу для заказчика из Древнего Рима ;-)

Предусловия: 0 < number < 4000
'''


numbers_to_roman = ((1000, "M"),
           (900, "CM"),
           (500, "D"),
           (400, "CD"),
           (100, "C"),
           (90, "XC"),
           (50, "L"),
           (40, "XL"),
           (10, "X"),
           (9, "IX"),
           (5, "V"),
           (4, "IV"),
           (1, "I"))


def checkio(data):
    roman = ""
    for num in numbers_to_roman:
        while data >= num[0]:
            roman += num[1]
            data -= num[0]
            print(roman)
    return roman


if __name__ == '__main__':
    # These "asserts" using only for self-checking and not necessary for auto-testing
    assert checkio(6) == 'VI', '6'
    assert checkio(76) == 'LXXVI', '76'
    assert checkio(499) == 'CDXCIX', '499'
    assert checkio(3888) == 'MMMDCCCLXXXVIII', '3888'